1- Banco de dados para auxiliar website de loja online de produtos de segurança. Deve conter informações relevantes para que seja realizada a compra de produtos, 
acompanhamento de pedidos, relação de vendas por funcionário, aplicação de cupons, entre outros. 

cliente (id_cliente, nome, idade, telefone, id_endereco);
pedido (id_pedido, id_cliente, id_cupom, id_funcionario, data);
item (id_item, id_produto, id_Pedido, qnd);
produto (id_produto, nome, preço, qtd_disponivel);
envio (id_envio, id_status_pedido, id_pedido);
status_pedido (id_status_pedido, nome);
endereço (id_endereço, id_cidade, rua, numero);
cidade (id_cidade, nome, id_uf);
uf (id_uf, nome);
cupom (id_cupom, nome, porcentagem, status);
funcionario (id_funcionario, nome);



1. Selecione o nome do produto e o valor total de vendas para aquele produto. Traga apenas os 2 produtos mais vendidos, ex:
	PRODUTO  |  VALOR_TOTAL
	Produto 1     |  500.000,00
	Produto 2     |  250.000,00

SELECT p.nome AS PRODUTO, COUNT(i.id_produto)*p.preco as VALOR_TOTAL FROM produto as p
JOIN item as i on p.id_produto=i.id_produto
GROUP BY p.nome
ORDER BY Valor_Total 
DESC
LIMIT 2;


2. Selecione o nome da cidade e quantidade de produtos vendidos naquela cidade em um determinado ano, ex:
	CIDADE  | PRODUTO  | QUANTIDADE |  ANO
          Palmares   | Produto 1      | 19                       | 2023
          Palmares   | Produto 2      | 196                     | 2022

SELECT ci.nome AS CIDADE, pro.nome AS PRODUTO, SUM(i.qtd) AS QUANTIDADE, EXTRACT(YEAR FROM p.data_pedido) AS ANO
FROM item AS i
JOIN pedido AS p ON i.id_pedido = p.id_pedido
JOIN produto AS pro ON i.id_produto = pro.id_produto
JOIN cliente AS c ON p.id_cliente = c.id_cliente
JOIN endereco AS e ON c.endereco = e.id_endereco
JOIN cidade AS ci ON e.id_cidade = ci.id_cidade
GROUP BY ci.nome, pro.nome;


3. Selecione o nome do cliente, o telefone do cliente, o nome da cidade do cliente, para todos os clientes que possuem pedidos atrasados, ex:
CLIENTE | TELEFONE | CIDADE 
           Fernanda   | 81 98165423 | Palmares
           Maria        | 81 585423 | Ribeirão

SELECT c.nome AS CLIENTE, c.telefone AS TELEFONE, ci.nome as CIDADE FROM cliente as c 
JOIN endereco as e ON e.id_endereco = c.endereco
JOIN cidade as ci ON ci.id_cidade = e.id_cidade
JOIN pedido as pe ON pe.id_cliente = c.id_cliente
JOIN envio as en ON en.id_pedido = pe.id_pedido
WHERE en.id_status_pedido = 3;


4. Selecione o nome do produto mais vendido em cada cidade, ex:
	CIDADE | PRODUTO | QUANTIDADE_ITENS
	Palmares | Produto 1     | 450
	Recife     | Produto  2    | 850
	Olinda    | Produto 2      | 850

SELECT c.nome AS CIDADE, p.nome AS PRODUTO, SUM(i.qtd) AS QUANTIDADE_ITENS
FROM item i
JOIN pedido pe ON i.id_pedido = pe.id_pedido
JOIN cliente cl ON pe.id_cliente = cl.id_cliente
JOIN endereco e ON cl.endereco = e.id_endereco
JOIN cidade c ON e.id_cidade = c.id_cidade
JOIN produto p ON i.id_produto = p.id_produto
GROUP BY c.id_cidade, p.id_produto
ORDER BY SUM(i.qtd) DESC;




5. Selecione a lista com os 5 cupons mais utilizados no ano de 2023, ex:
	CUPOM 		| QUANTIDADE
	Cupom Pondé     | 199
	Cupom Karnal     | 200

SELECT c.nome as CUPOM, COUNT(c.nome) as QUANTIDADE FROM pedido as p
JOIN cupom as c
ON p.id_cupom = c.id_cupom
WHERE YEAR(p.data_pedido) = 2023
GROUP BY c.nome
LIMIT 5;



6. Selecione os nomes dos produtos que tiveram o total de vendas superior à média de vendas dos outros produtos. ex:
	PRODUTO
	Produto 1

WITH TotalVendas AS (
    SELECT
        p.nome AS nome_produto,
        SUM(CASE WHEN i.qtd IS NOT NULL THEN i.qtd ELSE 0 END) AS total_vendas
    FROM
        produto p
    LEFT JOIN
        item i ON p.id_produto = i.id_produto
    GROUP BY
        p.nome
)
SELECT
    nome_produto as PRODUTO
FROM
    TotalVendas
WHERE
    total_vendas > (SELECT AVG(total_vendas) FROM TotalVendas WHERE total_vendas IS NOT NULL)
   OR (total_vendas = (SELECT AVG(total_vendas) FROM TotalVendas WHERE total_vendas IS NOT NULL) AND
       total_vendas IS NOT NULL);



7. Selecione o nome do cliente, o telefone, a cidade, o estado, a data do pedido, o total (preço) do pedido e a quantidade de itens comprados, 
ordenados por data (da mais recente para a mais antiga);

SELECT c.nome AS CLIENTE, c.telefone AS TELEFONE, cid.nome AS CIDADE, uf.nome AS ESTADO, pe.data_pedido AS DATA_DO_PEDIDO, i.qtd as QUANTIDADE,  SUM(p.preco * i.qtd) AS TOTAL_PEDIDO 
FROM cliente c 
JOIN endereco e 
ON c.endereco = e.id_endereco 
JOIN cidade cid 
ON e.id_cidade = cid.id_cidade
JOIN uf 
ON cid.id_uf = uf.id_uf 
JOIN pedido pe 
ON c.id_cliente = pe.id_cliente 
JOIN item i
ON pe.id_pedido = i.id_pedido 
JOIN produto p 
ON i.id_produto = p.id_produto 
GROUP BY pe.data_pedido DESC;
CORRIGIR


8. Selecione o percentual de pedidos atrasados, considerando todos os pedidos pendentes, ex:
	PERCENTUAL_ATRASOS
	65%
SELECT (COUNT(CASE WHEN sp.id_status_pedido = 3 THEN 1 END) / COUNT(CASE WHEN sp.id_status_pedido = 2 OR sp.id_status_pedido = 3 THEN 1 END)) * 100 AS PERCENTUAL_DE_ATRASADOS 
FROM pedido p 
JOIN envio e ON p.id_pedido = e.id_pedido 
JOIN status_pedido sp ON e.id_status_pedido = sp.id_status_pedido 
WHERE sp.id_status_pedido IN (2, 3);


9. Selecione a média de idade dos clientes que compram cada produto, ex:
	PRODUTO | MEDIA_IDADE
	Produto 1    |  25
	Produto 2    |  45

SELECT p.nome AS PRODUTO, AVG(cl.idade) AS MEDIA_IDADE
FROM item i
JOIN pedido pe ON i.id_pedido = pe.id_pedido
JOIN cliente cl ON pe.id_cliente = cl.id_cliente
JOIN produto p ON i.id_produto = p.id_produto
GROUP BY p.id_produto;



10. Selecione o relatório de uso de todos os cupons. Ordene os resultados pela data, da mais antiga para a mais nova. Além disso, 
traga apenas os resultados de 2023 e não considere os cupons de 100% de desconto ex:
DATA_PEDIDO | NOME_CUPOM | PERCENTAGEM | NOME_CLIENTE | NOME_FUNCIONARIO | TOTAL_COMPRA

SELECT p.data_pedido as DATA_PEDIDO, cup.nome as NOME_CUPOM, cu.porcentagem as PERCENTAGEM, c.nome as CLIENTE, f.nome as NOME_FUNCIONARIO, SUM(i.qtd * pr.preco) as TOTAL_COMPRA
FROM pedido as p
JOIN cliente as c ON c.id_cliente = p.id_cliente
JOIN cupom as cup ON cu.id_cupom = p.id_cupom
JOIN funcionario as f ON f.id_func = p.id_funcionario
JOIN item as i ON i.id_pedido = p.id_pedido
JOIN produto as pr ON pr.id_produto = i.id_produto
WHERE YEAR(p.data_pedido) = 2023 AND cup.porcentagem != '100%'
GROUP BY p.id_pedido
ORDER BY p.data_pedido ASC;


